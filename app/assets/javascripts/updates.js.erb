window.MapModule = (function() {
  var userLocations;

 function displayPosition(position) {

      var pos = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
      var options = {
        zoom: 16,
        center: pos,
        mapTypeId: google.maps.MapTypeId.ROADMAP
      };
      var testingLat = parseFloat(position.coords.latitude);
      var testingLng = parseFloat(position.coords.longitude);
      console.log(testingLat);

    $.ajax({
      type: 'PATCH',
      url: '/users/update',
      dataType: 'json',
      // data: { user: { lat: 'position.coords.latitude', long: 'position.coords.longitude'}}
      data: { user: { lat: position.coords.latitude, long: position.coords.longitude}}
    });

      var map = new google.maps.Map(document.getElementById("googleMap"), options);
      var marker = new google.maps.Marker({
        position: pos,
        map: map,
        title: "Current Location"
      });
      var contentString = "<br/><b>Current location:</b> lat " + position.coords.latitude + ", long " + position.coords.longitude;
      var infowindow = new google.maps.InfoWindow({
        content: contentString
      });
      google.maps.event.addListener(marker, 'click', function() {
        infowindow.open(map,marker);
      });
 
    
      var heatmapData =  _.map(userLocations, function(location){
          return new google.maps.LatLng(location.lat,location.lng)})

      var heatmap = new google.maps.visualization.HeatmapLayer({
        data: heatmapData
      });
      heatmap.setMap(map);
    }


    function displayError(error) {
      var errors = {
        1: 'Permission denied',
        2: 'Position unavailable',
        3: 'Request timeout'
      };
      alert("Error: " + errors[error.code]);
    }


    function getRandomInRange(from, to, fixed) {
      return (Math.random() * (to - from) + from).toFixed(fixed) * 1;
    }
    function generateRandomData() {
      var heatData = new Array(10000);
      lat = <%= User.all.first.lat %>
      lng = <%= User.all.first.long %>
      for (var i = 0; i < heatData.length; i++){
        // lat = getRandomInRange(43.645527, 43.660527, 4);
        // lng = getRandomInRange(-79.390961, -79.372961, 4);
       
        heatData[i] = new google.maps.LatLng(lat,lng);
      }
      return heatData;
    }

    function codeAddress() {
    var address = document.getElementById('address').value;
    geocoder.geocode( { 'address': address}, function(results, status) {
      if (status == google.maps.GeocoderStatus.OK) {
        map.setCenter(results[0].geometry.location);
        var marker = new google.maps.Marker({
            map: map,
            position: results[0].geometry.location
        });
      } else {
        alert('Geocode was not successful for the following reason: ' + status);
      }
    });
    }

    

  return {
    start: function(opts) {
      userLocations = opts.userLocations;
      
      console.log('Use locations', userLocations);

      if (navigator.geolocation) {
        var timeoutVal = 10 * 1000 * 1000;
        navigator.geolocation.watchPosition(
          displayPosition,
          displayError,
          { enableHighAccuracy: true, timeout: timeoutVal, maximumAge: 0 }
        );
      }
      else{
        alert("Geolocation is not supported by this browser");
      }
    }
  };
}());