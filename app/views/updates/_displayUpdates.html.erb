
<p>
  <% @updates.each do |update| %>
    <%= update.user.username%> says: <%= update.comment %> at <%= update.created_at.localtime.strftime('%I:%M%p')%> from <%= update.lat%>, <%= update.long%> 
    <%=update.likes%>
    <% if current_user.likes?(update)%>
      <%= link_to "Unlike", update_unlike_url(update) %>
    <% elsif !current_user.likes?(update)%>  â€ 
      <%= link_to "Like", update_like_url(update) %>
    <% end %> 
  </br>
  <% if update.attachment_file_size %> 
    <%= image_tag update.attachment.url(:thumb) %></br>
    <% if current_user.username == update.user.username %>
      <p><%= link_to "Delete", update, :confirm => "Delete update", :method => :delete %></p>
    <% end %> 
   <% end %>
  <% end %> 
</p>

<% @updates.each do |update| %>
    <div class = "updateContainer">
        <div class = "updateImage">
        <% if update.attachment_file_size %> 
            <%= image_tag update.attachment.url(:thumb) %>
            <% if current_user.username == update.user.username %>
                <%= link_to "Delete", update, :confirm => "Delete update", :method => :delete %>
            <% end %> 
        <% end %>
        </div>
        <div class = "updateComment textFont normalText darkText rightText smallestText">
            <div class="updateText">
                <%= update.user.username%></br> 
                <div class = "boldText darkText rightText smallestText">
                <%= update.comment %></div>
                <%= update.created_at.localtime.strftime('%I:%M%p')%> 
                <%#= update.lat%> <%#= update.long%> 
                
            </div>
            <div class= "updateLike">
                <% if current_user.likes?(update) %>
                    <%= link_to (update_unlike_url(update)) do %>
                        <div class="my-like" title="Like"></div><%end%>
                <% elsif !current_user.likes?(update) %>
                    <%= link_to (update_like_url(update)) do %>
                    <div class="my-unlike" title="Like"></div><% end %>
                <% end %>
                <%=update.likes%>
            </div>
        </div>
    </div>


   
<% end %> 

<%=@firebase_updates%>
      
<!-- Form that calls create  -->
<%= form_for @update, :method => :post do |f|  %>

    <%= f.label "Description"%> 
    <%= f.text_field :comment, {placeholder: 'comment'} %>
    <%= f.label "Attach" %><br>
    <%= f.file_field :attachment %>

    <div class="actions"><%=submit_tag 'Post Update' %></div>
    
<% end %>
<!--  -->

<form id="comment-form">
  <div id='messagesDiv'></div>
  <!-- <input type='text' id='nameInput' placeholder='Name'> -->
  <input type='text' id='messageInput' placeholder='Message...'>
  <input type="submit" id= "post-btn" value="Post">
</form>

<script>
  var messagesRef = new Firebase('https://hot-spotter.firebaseio.com/');

  // When the user presses enter on the message input, write the message to firebase.
    $('#comment-form').submit(function (e) {
      e.preventDefault();
      //var name = $('#nameInput').val();
      var username = '<%= current_user.username %>';
      var text = $('#messageInput').val();
      var created_at = '<%= Time.now.localtime.strftime("%I:%M%p") %>';
      messagesRef.push({username:username, text:text, created_at:created_at});
      $('#messageInput').val('');

      $.ajax({
        type: 'POST',
        url: '/updates',
        dataType: 'json',
        data: { update: { comment: text }}
      });

  })

  // Add a callback that is triggered for each chat message.
  messagesRef.limit(10).on('child_added', function (snapshot) {
    var message = snapshot.val();
    $('<div/>').text(message.text + ' at ' + message.created_at).prepend($('<em/>')
      .text(message.username+': ')).appendTo($('#messagesDiv'));
    $('#messagesDiv')[0].scrollTop = $('#messagesDiv')[0].scrollHeight;
  });
</script>




